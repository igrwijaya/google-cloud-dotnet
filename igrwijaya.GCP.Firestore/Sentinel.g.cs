// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: sentinel.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Google.Cloud.Firestore {

  /// <summary>Holder for reflection information generated from sentinel.proto</summary>
  internal static partial class SentinelReflection {

    #region Descriptor
    /// <summary>File descriptor for sentinel.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SentinelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5zZW50aW5lbC5wcm90bxoiZ29vZ2xlL2ZpcmVzdG9yZS92MS9kb2N1bWVu",
            "dC5wcm90byKOAQoOQXVnbWVudGVkVmFsdWUSGwoEa2luZBgLIAEoDjINLlNl",
            "bnRpbmVsS2luZBIvCgVhcnJheRiQTiABKAsyHy5nb29nbGUuZmlyZXN0b3Jl",
            "LnYxLkFycmF5VmFsdWUSLgoJaW5jcmVtZW50GJFOIAEoCzIaLmdvb2dsZS5m",
            "aXJlc3RvcmUudjEuVmFsdWUqggEKDFNlbnRpbmVsS2luZBIWChJTRU5USU5F",
            "TF9LSU5EX05PTkUQABIUChBTRVJWRVJfVElNRVNUQU1QEAESCgoGREVMRVRF",
            "EAISDwoLQVJSQVlfVU5JT04QAxIQCgxBUlJBWV9SRU1PVkUQBBIVChFOVU1F",
            "UklDX0lOQ1JFTUVOVBAFQhmqAhZHb29nbGUuQ2xvdWQuRmlyZXN0b3JlYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Cloud.Firestore.V1.DocumentReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Google.Cloud.Firestore.SentinelKind), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Google.Cloud.Firestore.AugmentedValue), global::Google.Cloud.Firestore.AugmentedValue.Parser, new[]{ "Kind", "Array", "Increment" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  internal enum SentinelKind {
    [pbr::OriginalName("SENTINEL_KIND_NONE")] None = 0,
    [pbr::OriginalName("SERVER_TIMESTAMP")] ServerTimestamp = 1,
    [pbr::OriginalName("DELETE")] Delete = 2,
    [pbr::OriginalName("ARRAY_UNION")] ArrayUnion = 3,
    [pbr::OriginalName("ARRAY_REMOVE")] ArrayRemove = 4,
    [pbr::OriginalName("NUMERIC_INCREMENT")] NumericIncrement = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  /// This is like google.firestore.v1.Value, but with
  /// extra "hidden" fields. We can convert between Value and AugmentedValue
  /// via serialization without losing information, which lets us "hide"
  /// information related to sentinel values (delete, server
  /// timestamps, array operations) within a regular Value object.
  /// However, such values should never be transmitted over the wire.
  /// They are purely implementation details to allow information to
  /// flow through a Value-oriented interface.
  /// </summary>
  internal sealed partial class AugmentedValue : pb::IMessage<AugmentedValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AugmentedValue> _parser = new pb::MessageParser<AugmentedValue>(() => new AugmentedValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AugmentedValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Google.Cloud.Firestore.SentinelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AugmentedValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AugmentedValue(AugmentedValue other) : this() {
      kind_ = other.kind_;
      array_ = other.array_ != null ? other.array_.Clone() : null;
      increment_ = other.increment_ != null ? other.increment_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AugmentedValue Clone() {
      return new AugmentedValue(this);
    }

    /// <summary>Field number for the "kind" field.</summary>
    public const int KindFieldNumber = 11;
    private global::Google.Cloud.Firestore.SentinelKind kind_ = global::Google.Cloud.Firestore.SentinelKind.None;
    /// <summary>
    /// This must be field 11 to match null_value in google.firestore.v1.Value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Firestore.SentinelKind Kind {
      get { return kind_; }
      set {
        kind_ = value;
      }
    }

    /// <summary>Field number for the "array" field.</summary>
    public const int ArrayFieldNumber = 10000;
    private global::Google.Cloud.Firestore.V1.ArrayValue array_;
    /// <summary>
    /// These fields are populated or not according to the kind.
    /// They must not collide with the fields in google.firestore.v1.Value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Firestore.V1.ArrayValue Array {
      get { return array_; }
      set {
        array_ = value;
      }
    }

    /// <summary>Field number for the "increment" field.</summary>
    public const int IncrementFieldNumber = 10001;
    private global::Google.Cloud.Firestore.V1.Value increment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Cloud.Firestore.V1.Value Increment {
      get { return increment_; }
      set {
        increment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AugmentedValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AugmentedValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Kind != other.Kind) return false;
      if (!object.Equals(Array, other.Array)) return false;
      if (!object.Equals(Increment, other.Increment)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Kind != global::Google.Cloud.Firestore.SentinelKind.None) hash ^= Kind.GetHashCode();
      if (array_ != null) hash ^= Array.GetHashCode();
      if (increment_ != null) hash ^= Increment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Kind != global::Google.Cloud.Firestore.SentinelKind.None) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Kind);
      }
      if (array_ != null) {
        output.WriteRawTag(130, 241, 4);
        output.WriteMessage(Array);
      }
      if (increment_ != null) {
        output.WriteRawTag(138, 241, 4);
        output.WriteMessage(Increment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Kind != global::Google.Cloud.Firestore.SentinelKind.None) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Kind);
      }
      if (array_ != null) {
        output.WriteRawTag(130, 241, 4);
        output.WriteMessage(Array);
      }
      if (increment_ != null) {
        output.WriteRawTag(138, 241, 4);
        output.WriteMessage(Increment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Kind != global::Google.Cloud.Firestore.SentinelKind.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Kind);
      }
      if (array_ != null) {
        size += 3 + pb::CodedOutputStream.ComputeMessageSize(Array);
      }
      if (increment_ != null) {
        size += 3 + pb::CodedOutputStream.ComputeMessageSize(Increment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AugmentedValue other) {
      if (other == null) {
        return;
      }
      if (other.Kind != global::Google.Cloud.Firestore.SentinelKind.None) {
        Kind = other.Kind;
      }
      if (other.array_ != null) {
        if (array_ == null) {
          Array = new global::Google.Cloud.Firestore.V1.ArrayValue();
        }
        Array.MergeFrom(other.Array);
      }
      if (other.increment_ != null) {
        if (increment_ == null) {
          Increment = new global::Google.Cloud.Firestore.V1.Value();
        }
        Increment.MergeFrom(other.Increment);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 88: {
            Kind = (global::Google.Cloud.Firestore.SentinelKind) input.ReadEnum();
            break;
          }
          case 80002: {
            if (array_ == null) {
              Array = new global::Google.Cloud.Firestore.V1.ArrayValue();
            }
            input.ReadMessage(Array);
            break;
          }
          case 80010: {
            if (increment_ == null) {
              Increment = new global::Google.Cloud.Firestore.V1.Value();
            }
            input.ReadMessage(Increment);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 88: {
            Kind = (global::Google.Cloud.Firestore.SentinelKind) input.ReadEnum();
            break;
          }
          case 80002: {
            if (array_ == null) {
              Array = new global::Google.Cloud.Firestore.V1.ArrayValue();
            }
            input.ReadMessage(Array);
            break;
          }
          case 80010: {
            if (increment_ == null) {
              Increment = new global::Google.Cloud.Firestore.V1.Value();
            }
            input.ReadMessage(Increment);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
